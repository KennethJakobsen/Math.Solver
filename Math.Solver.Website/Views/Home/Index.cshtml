@using System.Drawing
@using System.Globalization
@using System.Threading
@using Math.Solver.Core.CoordinateSystem
@using Math.Solver.Core.Equations.Quadratic
@using Math.Solver.Core.Equations.QuadraticEquation
@using Math.Solver.Core.Model.Equations.QuadraticEquation
@using model = Math.Solver.Core.Model
@{
    ViewBag.Title = "Home Page";
    Thread.CurrentThread.CurrentCulture = new CultureInfo("da");
    var solver = new QuadraticEquationSolver();
    var poly = new QuadraticPolynomiumSolver();
    var param = new QuadraticParameters()
    {
        A = -1,
        B = 1,
        C = 5
    };
    var points = new List<model.Navigation.Point>();
    var res = solver.Solve(param);
    var slv = new QuadraticPolynomiumSolver();
    for (int i = -20; i <= 20; i++)
    {
        points.Add(new model.Navigation.Point(i, slv.Solve(param, i)));
    }
    var coord = new TwoDimensionalCoordinateSystem(600);
    coord.DrawBezier(points, String.Empty, Color.Red);
    coord.DrawPoint(new model.Navigation.Point(res.X[0], 0), "X₁", Color.Black);
    coord.DrawPoint(new model.Navigation.Point(res.X[1], 0), "X₂", Color.Black);
    coord.DrawPoint(res.T, "T", Color.Black);
    var path = coord.Save(Server.MapPath("~/Images/"));
}

<div class="jumbotron">
   @foreach (var proc in res.Process)
   {
       <div>$$@proc$$</div>

   }
    <img src="/Images/@path" alt="graph"/>
</div>